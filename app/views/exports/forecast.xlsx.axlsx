wb = xlsx_package.workbook
headers = ['first name', 'last name', 'email', 'total hours']
headers << 'holiday' if @monthly_forecast.has_holidays?
headers += @team.ordered_fields.map { |field| field.name.downcase }.excluding("holiday")
headers << "notes"
num_rows = 0
wb.add_worksheet(name: "#{@team.name.parameterize.underscore}_#{@monthly_forecast.month_name.downcase}_#{@monthly_forecast.year}") do |sheet|
  sheet.add_row ["Expected total hours: #{@monthly_forecast.total_hours}"]
  sheet.add_row ["Expected holiday hours: #{@monthly_forecast.holiday_hours}"]
  sheet.add_row [*headers]
  MemberForecast.get_member_forecasts(@team, @monthly_forecast).each do |member_forecast|
    row = []
    row << member_forecast.first_name
    row << member_forecast.last_name
    row << member_forecast.email
    row << member_forecast.total_hours
    if @monthly_forecast.has_holidays?
      row << member_forecast.hours&.fetch(:holiday, 0)
    end
    @team.ordered_fields.each do |field|
      if field.name != "holiday"
        val = member_forecast&.hours&.fetch(field.name).present? ? member_forecast&.hours&.fetch(field.name) : 0
        row << val
      end
    end
    row << member_forecast.notes
    sheet.add_row row
    num_rows += 1
  end
  # freeze panes
  if num_rows > 0
    sheet.sheet_view.pane do |pane|
      pane.top_left_cell = "D4"
      pane.state = :frozen_split
      pane.y_split = 3
      pane.x_split = 3
      pane.active_pane = :bottom_right
    end
  end
  sheet.add_table "A3:#{[*'A'..'ZZ'][headers.size - 1] + (3 + num_rows).to_s}", name: "#{@team.name.titleize} #{@monthly_forecast.month_name} #{@monthly_forecast.year} Forecast", style_info: { name: 'TableStyleLight11' }
end